<?php
/**
 * PHPUnit Bootstrap File
 * 
 * Sets up the test environment for RentEase API tests (Docker version)
 */

// Load test environment variables
$envFile = __DIR__ . '/.env.docker';
if (file_exists($envFile)) {
    $lines = file($envFile, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
    foreach ($lines as $line) {
        if (strpos($line, '=') !== false && strpos($line, '#') !== 0) {
            list($key, $value) = explode('=', $line, 2);
            $key = trim($key);
            $value = trim($value);
            putenv("$key=$value");
        }
    }
}

// Set error reporting to maximum during tests
error_reporting(E_ALL);
ini_set('display_errors', '1');

// Define the base path
define('BASE_PATH', dirname(__DIR__));

// Load the autoloader if using Composer
if (file_exists(BASE_PATH . '/vendor/autoload.php')) {
    require_once BASE_PATH . '/vendor/autoload.php';
}

// Include test utility classes and mocks
require_once __DIR__ . '/mocks/MockResponseService.php';

// Function to create and reset the test database
function setupTestDatabase() {
    try {
        // Connect to the MySQL server (without specifying a database)
        $pdo = new PDO(
            'mysql:host=' . getenv('DB_HOST'),
            getenv('DB_USER'),
            getenv('DB_PASS')
        );
        $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        
        // Create the test database if it doesn't exist
        $db_name = getenv('DB_NAME');
        echo "Setting up test database: $db_name\n";
        $pdo->exec("CREATE DATABASE IF NOT EXISTS `$db_name`");
        $pdo->exec("USE `$db_name`");
        
        // Import the schema
        echo "Importing database schema...\n";
        $schemaFile = __DIR__ . '/fixtures/schema.sql';
        if (file_exists($schemaFile)) {
            $sql = file_get_contents($schemaFile);
            $pdo->exec($sql);
        } else {
            echo "Schema file not found: $schemaFile\n";
            exit(1);
        }
        
        // Import the test data
        echo "Importing test data...\n";
        $dataFile = __DIR__ . '/fixtures/test_data.sql';
        if (file_exists($dataFile)) {
            $sql = file_get_contents($dataFile);
            $pdo->exec($sql);
        } else {
            echo "Test data file not found: $dataFile\n";
            exit(1);
        }
        
        echo "Test database setup completed successfully.\n";
    } catch (PDOException $e) {
        echo "Database setup failed: " . $e->getMessage() . "\n";
        exit(1);
    }
}
